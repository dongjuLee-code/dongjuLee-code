# Generated by Django 2.1.4 on 2019-02-22 14:49

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nick_name', models.CharField(default='', max_length=100, verbose_name='닉네임')),
                ('gender', models.CharField(choices=[('male', '남'), ('female', '여')], default='female', max_length=6, verbose_name='성별')),
                ('mobile', models.CharField(blank=True, default='', max_length=11, null=True, verbose_name='전화 번호')),
                ('user_type', models.CharField(choices=[('student', '학생'), ('teacher', '선생')], default='student', max_length=7, verbose_name='사용자 유형')),
                ('age', models.IntegerField(default=18, verbose_name='나이')),
                ('image', models.ImageField(default='image/default.png', max_length=200, upload_to='image/%Y/%m', verbose_name='이미지')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '사용자 정보',
                'verbose_name_plural': '사용자 정보',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EmailVerifyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=100, verbose_name='코드')),
                ('email', models.EmailField(max_length=50, verbose_name='이메일')),
                ('send_type', models.CharField(choices=[('active', '활성화'), ('forget', '비밀번호 찾기'), ('update_email', '이메일 업데이트'), ('special_exam', '특별 시험')], max_length=50, verbose_name='발생 방식')),
                ('send_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='발송 시간')),
            ],
            options={
                'verbose_name': '이메일코드',
                'verbose_name_plural': '이메일코드',
            },
        ),
        migrations.CreateModel(
            name='StudentsInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(default='', max_length=20, verbose_name='학생 이름')),
                ('student_id', models.CharField(default='', max_length=20, verbose_name='학번')),
                ('student_class', models.CharField(default='', max_length=10, verbose_name='학생 학급')),
                ('student_school', models.CharField(default='', max_length=100, verbose_name='학생 소속 학교')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '학생 정보',
                'verbose_name_plural': '학생 정보',
            },
        ),
        migrations.CreateModel(
            name='SubjectInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(default='', max_length=20, verbose_name='과목 명칭')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='생성 시간')),
            ],
            options={
                'verbose_name': '과목 정보',
                'verbose_name_plural': '과목 정보',
            },
        ),
        migrations.CreateModel(
            name='TeacherInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_name', models.CharField(default='', max_length=20, verbose_name='선생 이름')),
                ('work_years', models.IntegerField(default=0, verbose_name='근무년도')),
                ('teacher_school', models.CharField(default='', max_length=100, verbose_name='선생 소속 학교')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.SubjectInfo', verbose_name='소속 과목')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '선생 정보',
                'verbose_name_plural': '선생 정보',
            },
        ),
    ]
